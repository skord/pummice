h1= @game.name

- if @current_user != nil
  - if @game.round == 0
    h3 Users in game:
    p 
      - @game.users.each do |user|
        =' user.firstname
        =' user.lastname
        br
    - if !@game.users.include?(@current_user)
      = simple_form_for @game do |f|
        = f.submit 'Join this game'
    br


- if @game.round > 0
  
  = simple_form_for @game do |f|

    input type="hidden" id="game_selected_tiles" name="game[selected_tiles]" value=""
    input type="hidden" id="game_landscape_position_x" name="game[landscape_position_x]" value=""
    input type="hidden" id="game_landscape_position_y" name="game[landscape_position_y]" value=""
    input type="hidden" id="paintable_locations" value=@paintable_locations.join(":")

    div.actions
      - if @current_seat && @current_seat.user == @current_user
        ' Action:
        - case @game.actioncode
        - when SubturnActionCode::CHOOSE_TILE_LOCATIONS
          ' Choosing tile locations
          = @select_tiles
          - if @select_tiles[0]
            = select_tag "game[action_enter_unbuilt]", options_from_collection_for_select(@select_tiles[0], "id", "name")
        - when SubturnActionCode::CHOOSE_PRODUCTION_TOKENS
          ' Choosing production token
          = select_tag "game[action_production_token]", options_for_select(@game.available_tokens(@select_tokens))
        - when SubturnActionCode::CHOOSE_CLERGY_MEMBER
          ' Choosing clergy to use at 
          = @building_card.name
          ' :
          = select_tag "game[action_clergy_member]", options_for_select(@clergy_members)
        - when SubturnActionCode::DECIDE_ENTER_BUILDING
          ' Do you want to place your Prior in
          = @building_card.name
          ' ?
          = select_tag "game[action_use_prior]", options_for_select(["Yes", "No"])
        - when SubturnActionCode::CHOOSE_BUILDING_ACTION
          = render :partial => "spend", :locals => { :activities => @activities }
        - when SubturnActionCode::PLACE_LANDSCAPE
          - if @landscape.is_a? District
            ' Choose side for landscape:
            = select_tag "game[action_landscape_side]", options_for_select([["Moor/Forest/Forest/Hillside/Hillside", 0], ["Forest/Plains/Plains/Plains/Hillside", 1]]), { :onchange => "showDistrict(this, %s);" % @landscape.cost }
        - when SubturnActionCode::CHOOSE_RESOURCES
          - case @resource_mode
          - when SubturnResourceMode::UNIQUES
            table
              tr
                th
                  - if @resource_spend_count > 0
                    ' Choose 
                    =' @resource_spend_count
                    ' unique resources to spend:
                  - else
                    ' Spend resource?
                th
                - @resource_gain_multiplier.each do |rgm|
                  th
                    ' Choose resource to gain:
                  - if @resource_gain_multiplier.last != rgm
                    th width="10"
              tr
                td valign="top"
                  - @resource_spend.each do |rs|
                    = check_box_tag "game[resource_spend][]", rs.first, false, { :onclick => "selectResourceSpend(this, %s);" % @resource_spend_count }
                    = @game.map_resource(rs.first)
                    br
                td valign="center"
                  img src=("../assets/convert%sx.png" % @resource_convert_max) alt=("%s times" % [@resource_convert_max == 0 ? "unlimited" : @resource_convert_max]) title=("%s times" % [@resource_convert_max == 0 ? "unlimited" : @resource_convert_max])
                - @resource_gain_multiplier.each do |rgm|
                  td id=("tdResourceGain_%s" % @resource_gain_multiplier.index(rgm)) valign="top"
                    - @resource_gain.each do |rs|
                      = radio_button_tag ("game[resource_gain_%s][]" % @resource_gain_multiplier.index(rgm)), rs.first, false, { :onclick => "selectResourceGain(this, %s, %s, %s);" % [rs.first, @resource_gain_multiplier.length, @resource_gain_unique] }
                      =' rgm
                      = @game.map_resource(rs.first)
                      br
                  - if @resource_gain_multiplier.last != rgm
                    td
              - if @resource_spend_count > 0
                tr
                  td
                    ' Selected:
                    span.invalid id="resource_spend_checked_count"
                      '0
                  td
                  td
          - when SubturnResourceMode::FUEL_FOOD
            |Choose resources to spend:
            table
              tr valign="top"
                td
                  table.resources id="tbl_game_resource_spend_fuel" border=0 style="border-collapse: collapse;"
                    thead
                      tr
                        th colspan="4" Fuels
                    tbody
                      - @resource_spend[:fuel].each do |rs|
                        tr
                          td
                            =' @game.map_resource(rs.first)
                            |(
                            b = @current_seat.get_resource(rs.first)
                            - if rs.first == Resource::STRAW
                              |+
                              b = @current_seat.get_resource(Resource::GRAIN)
                            |)
                          td width="16"
                            img id=("game_resource_spend_%s_down" % rs.first) src="../assets/arrow_left.png" style="cursor: pointer; display: none;" onclick=("spend_down(game_resource_spend_%s);" % rs.first)
                          td
                            input type="text" id=("game_resource_spend_%s" % rs.first) name=("game[resource_spend_%s]" % rs.first) value="0" size="2" style="text-align: right;" onchange=("spend_update(this, %s);" % rs.last)
                          td width="16"
                            img id=("game_resource_spend_%s_up" % rs.first) src="../assets/arrow_right.png" style="cursor: pointer;" onclick=("spend_up(game_resource_spend_%s, %s);" % rs)
                td width="35px"
                - if @resource_spend[:food]
                  td
                    table.resources id="tbl_game_resource_spend_food" border=0 style="border-collapse: collapse;"
                      thead
                        tr
                          th colspan="4" Foods
                      tbody
                        - @resource_spend[:food].each do |rs|
                          tr
                            td
                              =' @game.map_resource(rs.first)
                              |(
                              b = rs.last
                              |)
                            td width="16"
                              img id=("game_resource_spend_%s_down" % rs.first) src="../assets/arrow_left.png" style="cursor: pointer; display: none;" onclick=("spend_down(game_resource_spend_%s);" % rs.first)
                            td
                              input type="text" id=("game_resource_spend_%s" % rs.first) name=("game[resource_spend_%s]" % rs.first) value="0" size="2" style="text-align: right;" onchange=("spend_update(this, %s);" % rs.last)
                            td width="16"
                              img id=("game_resource_spend_%s_up" % rs.first) src="../assets/arrow_right.png" style="cursor: pointer;" onclick=("spend_up(game_resource_spend_%s, %s);" % rs)
              - if @resource_needed.length > 0
                tr
                  td
                    - if @resource_needed[:fuel]
                      |Fuel needed: 
                      span id="resource_spend_50_needed" style="font-weight: bold;"
                        = @resource_needed[:fuel]
                      |&nbsp;Spent: 
                      span.invalid id="resource_spend_50_count"
                        '0
                  td
                  - if @resource_needed[:food]
                    td
                      |Food needed: 
                      span id="resource_spend_51_needed" style="font-weight: bold;"
                        = @resource_needed[:food]
                      |&nbsp;Spent: 
                      span.invalid id="resource_spend_51_count"
                        '0
              - else
                tr
                  td colspan="3"
                    input type="hidden" id="resource_gain_steps" value=(@resource_gain.map{|rg| "%s:%s" % [rg.first, rg.last.map {|r| '%s=%s' % [r.first.join('/'), r.last]}.join(",")]}.join(";"))
                    table.resources width="150"
                      thead
                        tr
                          th colspan=(@resource_spend.length) Spending
                          th width="20px" &nbsp;
                          th colspan=(@resource_gain.length) Gaining
                        tr
                          th Fuel
                          th Food
                          th
                          - @resource_gain.each do |rg|
                            th
                              = @game.map_resource(rg.first)
                      tbody
                        tr
                          - if @resource_spend[:fuel]
                            td.textright
                              span.valid id="resource_spend_50_count"
                                '0
                          - if @resource_spend[:food]
                            td.textright
                              span.valid id="resource_spend_51_count"
                                '0
                          td
                          - @resource_gain.each do |rg|
                            td.textright
                              span.valid id=("resource_gain_%s" % rg.first)
                                '0
          - when SubturnResourceMode::OPTIONS
            | Choose resources to gain:
            table
              tr
                - @resource_options.each do |rg|
                  td valign="top"
                    table
                      - rg.each do |res|
                        tr
                          td
                            = radio_button_tag ("game[resource_gain_%s][]" % @resource_options.index(rg)), res.first, rg.count == 1
                            =' res.last
                            = @game.map_resource(res.first)
                  - if @resource_options.last != rg
                    td width="10px" style="background-color: #999;"
          - when SubturnResourceMode::VPS
            | Choose VP tiles to gain:
            table style="border: 1px solid black; border-collapse: collapse;"
              tr valign="top" style="text-align: center; border: 0px;"
                th
                  |Resources
                  input type="hidden" id="resource_gain_keys" value=(@resource_gain.map{|g| g.first}.join(','))
                th colspan="3"
                  |To gain: 
                  span id="resource_gain_max" class=(@resource_gain_max > 0 ? "warning" : "valid")
                    = @resource_gain_max
              - @resource_gain.each do |rg|
                tr style="border: 0px;"
                  td
                    =' @game.map_resource(rg.first)
                    |(
                    span id=("resource_gain_count_%s" % rg.first) style="font-weight: bold;"
                      = rg.last
                    |)
                    td width="16"
                      img id=("game_resource_gain_%s_down" % rg.first) src="../assets/arrow_left.png" style="cursor: pointer; display: none;" onclick=("gain_down(%s);" % rg.first)
                    td
                      input type="text" id=("game_resource_gain_%s" % rg.first) name=("game[resource_gain_%s]" % rg.first) value="0" size="2" style="text-align: right;" onchange=("gain_update(%s);" % rg.first)
                    td width="16"
                      img id=("game_resource_gain_%s_up" % rg.first) src="../assets/arrow_right.png" style="cursor: pointer;" onclick=("gain_up(%s);" % rg.first)
              tr
                td Total
                td
                td style="text-align: right;"
                  span id=("resource_gain_%s" % Resource::VP) class=(@resource_gain_max > 0 ? "warning" : "valid")
                    '0
                td
          - when SubturnResourceMode::SPEND_CHOICES
            |Choose work contract payment:
            table
              tr
                td valign="top" style="text-align: left; border: 1px solid black;"
                  - @resource_spend.each do |rs|
                    = radio_button_tag "game[resource_spend][]", rs.first, false
                    =' rs.last.first 
                    =' @game.map_resource(rs.first)
                    | to 
                    =' rs.last.last
                    br
        - when SubturnActionCode::BUILD_BUILDING
          input id="game_action_types" name="game[action_types]" type="hidden" value="203"
          = select_tag "game[action_build]", options_for_select(@build_building)
        - when SubturnActionCode::CONVERT_RESOURCES
          table.resources border="0" style="border-collapse: collapse;"
            thead
              tr
                th colspan="4" Convert Resources
                th colspan="2" To
            tbody
              - @activities.each do |conv|
                tr
                  td
                    =' @game.map_resource(conv.last[0])
                    |(
                    b = conv.last[1]
                    |)
                  td width="16"
                    img id=("game_resource_spend_%s_down" % conv.last[0]) src="../assets/arrow_left.png" style="cursor: pointer; display: none;" onclick=("spend_down(game_resource_spend_%s);" % conv.last[0])
                  td
                    input type="text" id=("game_resource_spend_%s" % conv.last[0]) name=("game[resource_spend_%s]" % conv.last[0]) value="0" size="2" style="text-align: right;" onchange=("spend_update(this, %s);" % conv.last[1])
                  td width="16"
                    img id=("game_resource_spend_%s_up" % conv.last[0]) src="../assets/arrow_right.png" style="cursor: pointer;" onclick=("spend_up(game_resource_spend_%s, %s);" % [conv.last[0], conv.last[1]])
                  td =' @game.map_resource(conv.last[2])
                  td
                    span id=("game_resource_gain_%s" % conv.last[2]) 0
          input type="hidden" id="resource_gain_factors" value=(@activities.map{|a| '%s:%s:%s' % [a.last[0], a.last[3], a.last[2]]}.join('|'))
        - else
          = select_tag "game[action_types]", options_for_select(@current_seat.available_action_types), { :onchange => "showSelect(this);" }
          = select_tag "game[action_basic]", options_for_select(@current_seat.available_basic), { :style => "display: none;" }
          = select_tag "game[action_build]", options_for_select(@current_seat.available_build), { :style => "display: none;" }
          = select_tag "game[action_enter]", grouped_options_for_select(@current_seat.available_enter), { :style => "display: none;" }
          = select_tag "game[action_contract]", grouped_options_for_select(@current_seat.available_contract), { :style => "display: none;" }
          = select_tag "game[action_extra]", options_for_select(@current_seat.available_extra), { :style => "display: none;" }

        = f.submit 'Play', :id => "bPlay"
        /, :style => ("display: none;" if 

    br
    table.tabs
      tbody
        tr class=(@game.variant == GameVariant::FRANCE ? "variant-france" : "variant-ireland")
          td id="tabgamepage" class=(@current_user ? "tabgame" : "tabselected") onclick=("show('gamepage');change_style('tabgamepage','tabselected');%shide('gamelog');change_style('tabgamelog','tabgame');hide('chatlog');change_style('tabchatlog','tabgame');" % (1..@game.number_of_players).map { |n| "hide('seat%s');change_style('tabseat%s','tabseat%s');" % [n, n, n] }.join(""))
            | Game Area
          - @game.seats.sort_by{|seat| seat.number}.each do |seat|
            td id=("tabseat%s" % seat.number) class=(seat.user == @current_user ? "tabselected" : "tabseat%s" % seat.number) onclick=("hide('gamepage');change_style('tabgamepage','tabgame');%shide('gamelog');change_style('tabgamelog','tabgame');hide('chatlog');change_style('tabchatlog','tabgame');" % (1..@game.number_of_players).map { |n| "%s('seat%s');change_style('tabseat%s','%s');" % [(n == seat.number ? "show" : "hide"), n, n, (n == seat.number ? "tabselected" : "tabseat%s" % n)] }.join(""))
              = seat.user.fullname
          td id="tabgamelog" class="tabgame" onclick=("hide('gamepage');change_style('tabgamepage','tabgame');%sshow('gamelog');change_style('tabgamelog','tabselected');hide('chatlog');change_style('tabchatlog','tabgame');" % (1..@game.number_of_players).map { |n| "hide('seat%s');change_style('tabseat%s','tabseat%s');" % [n, n, n] }.join(""))
            | Game Log
          td id="tabchatlog" class="tabgame" onclick=("hide('gamepage');change_style('tabgamepage','tabgame');%shide('gamelog');change_style('tabgamelog','tabgame');show('chatlog');change_style('tabchatlog','tabselected');" % (1..@game.number_of_players).map { |n| "hide('seat%s');change_style('tabseat%s','tabseat%s');" % [n, n, n] }.join(""))
            | Chat Log

    table.display
      tr.gamepage id="gamepage" style=("display: %s;" % (@current_user ? "none" : ""))
        td
          div
            ' Round:&nbsp;
            b =' @game.round
            ' &nbsp;Age:&nbsp;
            - case @game.age
            - when Game::Age::START
              img src="../assets/age_start.png" alt=@game.map_age title=@game.map_age
            - else
              b = @game.map_age
            | &nbsp;Phase:&nbsp;
            b =' @game.map_phase
            - if @game.phase != Phase::ENDGAME
              ' &nbsp;Player's turn:&nbsp;
              b =' @game.find_seat_by_number(@game.current_seat_number).user.fullname
              ' &nbsp;Actions remaining:&nbsp;
              b =' @game.actions_remaining
            table.resourcewheel
              tr
                th colspan=7
                  | Resource production
              tr
                td
                  'Wood:
                  b = @game.wood_production
                td
                  'Peat:
                  b = @game.peat_production
                td
                  'Grain:
                  b = @game.grain_production
                td
                  'Livestock:
                  b = @game.livestock_production
                td
                  'Clay:
                  b = @game.clay_production
                td
                  'Coin:
                  b = @game.coin_production
                td
                  'Joker:
                  b = @game.joker_production
              tr
                td colspan=2
                  - if @game.wheel_stone_position > 0
                    'Stone:
                    b = @game.stone_production
                  - elsif @game.stone_enters > 0
                    'Stone:
                    b =' (@game.stone_enters - @game.wheel_position + 1)
                    ' rounds
                td colspan=2
                  - if @game.wheel_grape_position > 0
                    'Grapes:
                    b = @game.grape_production
                  - elsif @game.grape_enters > 0
                    'Grapes:
                    b =' (@game.grape_enters - @game.wheel_position + 1)
                    ' rounds
                td colspan=3
                  - if @game.wheel_house_position > 0
                    'Settlement:
                    b =' (@game.wheel_house_position - @game.wheel_position)
                    ' rounds
                  - else
                    'Buildings left:
                    b =' (@game.building_cards.length)
              tr
                th colspan=7
                  | Production growth
              tr
                td colspan=7
                  = @game.production_list.map { |d| d.to_s }.join(", ")
            hr
              h3 Available buildings
              table.buildings
                thead
                  tr
                    th Name
                    th Locations
                    th EV
                    th DV
                    th Age
                    th Wood
                    th Clay
                    th Stone
                    th Straw
                    th Coin
                    th Code
                tbody
                  - @game.building_cards.sort_by{|b| b.id}.each do |building_card|
                    tr
                      td class=(if building_card.is_cloister then "cloister" else "noncloister" end)
                        = building_card.name
                      td = building_card.map_available_location_types.map { |t| t }.join(", ")
                      td.textright = building_card.economic_value
                      td.textright = building_card.dwelling_value
                      td
                        - case building_card.age
                        - when Game::Age::START
                          img src="../assets/age_start.png" alt=building_card.map_age title=building_card.map_age
                        - else
                          b = building_card.map_age
                      td.textright = building_card.cost_wood if building_card.cost_wood > 0
                      td.textright = building_card.cost_clay if building_card.cost_clay > 0
                      td.textright = building_card.cost_stone if building_card.cost_stone > 0
                      td.textright = building_card.cost_straw if building_card.cost_straw > 0
                      td.textright = building_card.cost_coin if building_card.cost_coin > 0
                      td = building_card.key
              table.buildings
                thead
                  tr
                    - @game.building_cards.each do |building_card|
                      th class=(if building_card.is_cloister then "cloister" else "noncloister" end)
                        = building_card.name
                tbody
                  tr
                    - @game.building_cards.each do |building_card|
                      td
                        ' EV:
                        b =' building_card.economic_value
                        ' DV:
                        b =' building_card.dwelling_value
                        br
                        ' Age:
                        - case building_card.age
                        - when Game::Age::START
                          img src="../assets/age_start.png" alt=building_card.map_age title=building_card.map_age
                        - else
                          b = building_card.map_age
                        br
                        ' Loc:
                        = building_card.map_available_location_types.map { |t| t[0] }.join(", ")
                        br
                        - if building_card.cost_wood > 0
                          ' W:
                          b =' building_card.cost_wood
                        - if building_card.cost_clay > 0
                          ' C:
                          b =' building_card.cost_clay
                        - if building_card.cost_stone > 0
                          ' T:
                          b =' building_card.cost_stone
                        - if building_card.cost_straw > 0
                          ' S:
                          b =' building_card.cost_straw
                        - if building_card.cost_coin > 0
                          ' $:
                          b =' building_card.cost_coin
                        - if building_card.cost_fuel > 0
                          ' U:
                          b =' building_card.cost_fuel
                        - if building_card.cost_food > 0
                          ' F:
                          b =' building_card.cost_food
                        br
                        = building_card.key

            hr
              table.districts_plots
                thead
                  tr
                    th District costs
                    th Plot costs
                tbody
                  tr
                    td
                      = @game.districts.sort_by{|d| d.id}.map { |d| "%s" % d.cost }.join(", ")
                    td
                      = @game.plots.sort_by{|p| p.id}.map { |p| "%s" % p.cost }.join(", ")
      - @game.seats.sort_by{|seat| seat.number}.each do |seat|
        tr class=("seat%s" % seat.number) id=("seat%s" % seat.number) style=("display: %s;" % (seat.user == @current_user ? "" : "none"))
          td
            = render :partial => "seat_board", :locals => { :seat => seat }
      tr.gamelog id="gamelog" style=("display: none;")
        td
          | The game log goes here
      tr.chatlog id="chatlog" style=("display: none;")
        td
          h3 Game chat log
          - if @current_user && @game.find_seat_by_user(@current_user)
            = simple_form_for :chatlog do |fc|
              = fc.input :message, :required => true, :label => false, :as => :text, :input_html => { :rows => 5, :cols => 60 }
              = fc.submit 'Post message'
          br
          table.chatlog
            thead
              tr
                th Timestamp
                th Player
                th Text
            tbody
              - @game.chatlogs.sort_by{|chatlog| chatlog.timestamp}.reverse.each do |chatlog|
                tr
                  td width="110px" = chatlog.timestamp.strftime('%Y-%m-%d %H:%M:%S')
                  td width="110px" class=("seat%s" % chatlog.seat.number) 
                    = chatlog.seat.user.fullname
                  td = chatlog.message
